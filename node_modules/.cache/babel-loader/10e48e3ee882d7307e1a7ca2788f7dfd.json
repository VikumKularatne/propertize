{"ast":null,"code":"var _jsxFileName = \"/Users/vikum/Desktop/propertize/src/App.js\",\n  _s = $RefreshSig$();\n// Importing necessary hooks from React\nimport { useEffect, useState } from 'react';\n// Importing ethers library for Ethereum interactions\nimport { ethers } from 'ethers';\n\n// Importing the Components\nimport Navigation from './components/Navigation';\nimport Search from './components/Search';\nimport Home from './components/Home';\n\n// Importing the ABIs (Application Binary Interface) for both contracts\nimport RealEstateToken from './abis/RealEstateToken.json';\nimport Escrow from './abis/Escrow.json';\n\n// Importing the config file\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State variable for the web3 provider\n  const [provider, setProvider] = useState(null);\n  // State variable for the escrow contract\n  const [escrow, setEscrow] = useState(null);\n\n  // State variable for the user's account address\n  const [account, setAccount] = useState(null);\n\n  // State variable for the list of homes\n  const [homes, setHomes] = useState([]);\n  // State variable for the selected home\n  const [home, setHome] = useState({});\n  // State variable for toggling the home details popup\n  const [toggle, setToggle] = useState(false);\n  const loadBlockchainData = async () => {\n    // Create a new Web3Provider instance\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider); // Set the provider in the state\n    const network = await provider.getNetwork(); // Get the current network\n\n    // Create a contract instance for the RealEstateToken\n    const realEstateToken = new ethers.Contract(config[network.chainId].realEstateToken.address, RealEstateToken, provider);\n    // Get the total supply of tokens\n    const totalSupply = await realEstateToken.totalSupply();\n    const homes = [];\n    for (var i = 1; i <= totalSupply; i++) {\n      const uri = await realEstateToken.tokenURI(i); // Get the token URI for each token\n      const response = await fetch(uri); // Fetch the metadata from the URI\n      const metadata = await response.json(); // Parse the metadata as JSON\n      homes.push(metadata); // Add the metadata to the homes array\n    }\n\n    setHomes(homes); // Set the homes in the state\n\n    // Create a contract instance for the Escrow contract\n    const escrow = new ethers.Contract(config[network.chainId].escrow.address, Escrow, provider);\n    setEscrow(escrow); // Set the escrow contract in the state\n\n    // Listen for account changes\n    window.ethereum.on('accountsChanged', async () => {\n      // Get the updated accounts\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      // Get the address of the first account\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account); // Set the account in the state\n    });\n  };\n\n  useEffect(() => {\n    // Load blockchain data when the component mounts\n    loadBlockchainData();\n  }, []);\n  const togglePop = home => {\n    setHome(home); // Set the selected home\n    toggle ? setToggle(false) : setToggle(true); // Toggle the popup\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Listed Properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: homes.map((home, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => togglePop(home),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: home.image,\n              alt: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [home.attributes[0].value, \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: home.attributes[2].value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), \" bds |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: home.attributes[3].value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), \" ba |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: home.attributes[4].value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), \" sqft\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: home.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), toggle &&\n    /*#__PURE__*/\n    // Render the Home component only if the toggle is true\n    _jsxDEV(Home, {\n      home: home,\n      provider: provider,\n      account: account,\n      escrow: escrow,\n      togglePop: togglePop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CaM9fGNYcYl2WT7yr6zJg0SLieg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Search","Home","RealEstateToken","Escrow","config","App","provider","setProvider","escrow","setEscrow","account","setAccount","homes","setHomes","home","setHome","toggle","setToggle","loadBlockchainData","providers","Web3Provider","window","ethereum","network","getNetwork","realEstateToken","Contract","chainId","address","totalSupply","i","uri","tokenURI","response","fetch","metadata","json","push","on","accounts","request","method","utils","getAddress","togglePop","map","index","image","attributes","value"],"sources":["/Users/vikum/Desktop/propertize/src/App.js"],"sourcesContent":["// Importing necessary hooks from React\nimport { useEffect, useState } from 'react';\n// Importing ethers library for Ethereum interactions\nimport { ethers } from 'ethers';\n\n// Importing the Components\nimport Navigation from './components/Navigation';\nimport Search from './components/Search';\nimport Home from './components/Home';\n\n// Importing the ABIs (Application Binary Interface) for both contracts\nimport RealEstateToken from './abis/RealEstateToken.json'\nimport Escrow from './abis/Escrow.json'\n\n// Importing the config file\nimport config from './config.json';\n\nfunction App() {\n  // State variable for the web3 provider\n  const [provider, setProvider] = useState(null) \n  // State variable for the escrow contract\n  const [escrow, setEscrow] = useState(null)\n\n  // State variable for the user's account address\n  const [account, setAccount] = useState(null)\n\n  // State variable for the list of homes\n  const [homes, setHomes] = useState([])\n  // State variable for the selected home\n  const [home, setHome] = useState({})\n  // State variable for toggling the home details popup\n  const [toggle, setToggle] = useState(false);\n\n  const loadBlockchainData = async () => {\n    // Create a new Web3Provider instance\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    setProvider(provider) // Set the provider in the state\n    const network = await provider.getNetwork() // Get the current network\n\n    // Create a contract instance for the RealEstateToken\n    const realEstateToken = new ethers.Contract(config[network.chainId].realEstateToken.address, RealEstateToken, provider)\n    // Get the total supply of tokens\n    const totalSupply = await realEstateToken.totalSupply() \n    const homes = []\n\n    for (var i = 1; i <= totalSupply; i++) {\n      const uri = await realEstateToken.tokenURI(i) // Get the token URI for each token\n      const response = await fetch(uri) // Fetch the metadata from the URI\n      const metadata = await response.json() // Parse the metadata as JSON\n      homes.push(metadata) // Add the metadata to the homes array\n    }\n\n    setHomes(homes)  // Set the homes in the state\n\n    // Create a contract instance for the Escrow contract\n    const escrow = new ethers.Contract(config[network.chainId].escrow.address, Escrow, provider)\n    setEscrow(escrow) // Set the escrow contract in the state\n\n    // Listen for account changes\n    window.ethereum.on('accountsChanged', async () => { \n      // Get the updated accounts\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // Get the address of the first account\n      const account = ethers.utils.getAddress(accounts[0])\n      setAccount(account); // Set the account in the state\n    })\n  }\n\n  useEffect(() => {\n    // Load blockchain data when the component mounts\n    loadBlockchainData()\n  }, [])\n\n  const togglePop = (home) => {\n    setHome(home) // Set the selected home\n    toggle ? setToggle(false) : setToggle(true); // Toggle the popup\n  }\n\n  return (\n    <div>\n      {/* Render the Navigation component */}\n      <Navigation account={account} setAccount={setAccount} />\n      {/* Render the Search component */}\n      <Search /> \n\n      <div className='cards__section'>\n\n        <h3>Listed Properties</h3>\n\n        <hr />\n\n        <div className='cards'>\n          {homes.map((home, index) => (\n            <div className='card' key={index} onClick={() => togglePop(home)}>\n              <div className='card__image'>\n                <img src={home.image} alt=\"Home\" /> {/* Display the home image */}\n              </div>\n              <div className='card__info'>\n                {/* Display the home price in ETH */}\n                <h4>{home.attributes[0].value} ETH</h4>\n                <p> {/* Displaying the number of bedrooms, bathrooms, and square footage */}\n                  <strong>{home.attributes[2].value}</strong> bds |\n                  <strong>{home.attributes[3].value}</strong> ba |\n                  <strong>{home.attributes[4].value}</strong> sqft\n                </p>\n                <p>{home.address}</p> {/* Display the home address */}\n              </div>\n            </div>\n          ))}\n        </div>\n\n      </div>\n\n      {toggle && ( // Render the Home component only if the toggle is true\n        <Home home={home} provider={provider} account={account} escrow={escrow} togglePop={togglePop} />\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AACA,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;;AAEpC;AACA,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,MAAM,MAAM,oBAAoB;;AAEvC;AACA,OAAOC,MAAM,MAAM,eAAe;AAAC;AAEnC,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C;EACA,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC;EACA,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMqB,kBAAkB,GAAG,YAAY;IACrC;IACA,MAAMZ,QAAQ,GAAG,IAAIR,MAAM,CAACqB,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnEf,WAAW,CAACD,QAAQ,CAAC,EAAC;IACtB,MAAMiB,OAAO,GAAG,MAAMjB,QAAQ,CAACkB,UAAU,EAAE,EAAC;;IAE5C;IACA,MAAMC,eAAe,GAAG,IAAI3B,MAAM,CAAC4B,QAAQ,CAACtB,MAAM,CAACmB,OAAO,CAACI,OAAO,CAAC,CAACF,eAAe,CAACG,OAAO,EAAE1B,eAAe,EAAEI,QAAQ,CAAC;IACvH;IACA,MAAMuB,WAAW,GAAG,MAAMJ,eAAe,CAACI,WAAW,EAAE;IACvD,MAAMjB,KAAK,GAAG,EAAE;IAEhB,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAID,WAAW,EAAEC,CAAC,EAAE,EAAE;MACrC,MAAMC,GAAG,GAAG,MAAMN,eAAe,CAACO,QAAQ,CAACF,CAAC,CAAC,EAAC;MAC9C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC,EAAC;MAClC,MAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE,EAAC;MACvCxB,KAAK,CAACyB,IAAI,CAACF,QAAQ,CAAC,EAAC;IACvB;;IAEAtB,QAAQ,CAACD,KAAK,CAAC,EAAE;;IAEjB;IACA,MAAMJ,MAAM,GAAG,IAAIV,MAAM,CAAC4B,QAAQ,CAACtB,MAAM,CAACmB,OAAO,CAACI,OAAO,CAAC,CAACnB,MAAM,CAACoB,OAAO,EAAEzB,MAAM,EAAEG,QAAQ,CAAC;IAC5FG,SAAS,CAACD,MAAM,CAAC,EAAC;;IAElB;IACAa,MAAM,CAACC,QAAQ,CAACgB,EAAE,CAAC,iBAAiB,EAAE,YAAY;MAChD;MACA,MAAMC,QAAQ,GAAG,MAAMlB,MAAM,CAACC,QAAQ,CAACkB,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACjF;MACA,MAAM/B,OAAO,GAAGZ,MAAM,CAAC4C,KAAK,CAACC,UAAU,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpD5B,UAAU,CAACD,OAAO,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC;;EAEDd,SAAS,CAAC,MAAM;IACd;IACAsB,kBAAkB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM0B,SAAS,GAAI9B,IAAI,IAAK;IAC1BC,OAAO,CAACD,IAAI,CAAC,EAAC;IACdE,MAAM,GAAGC,SAAS,CAAC,KAAK,CAAC,GAAGA,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC;;EAED,oBACE;IAAA,wBAEE,QAAC,UAAU;MAAC,OAAO,EAAEP,OAAQ;MAAC,UAAU,EAAEC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAExD,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAEV;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAE7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAE1B;QAAA;QAAA;QAAA;MAAA,QAAM,eAEN;QAAK,SAAS,EAAC,OAAO;QAAA,UACnBC,KAAK,CAACiC,GAAG,CAAC,CAAC/B,IAAI,EAAEgC,KAAK,kBACrB;UAAK,SAAS,EAAC,MAAM;UAAa,OAAO,EAAE,MAAMF,SAAS,CAAC9B,IAAI,CAAE;UAAA,wBAC/D;YAAK,SAAS,EAAC,aAAa;YAAA,wBAC1B;cAAK,GAAG,EAAEA,IAAI,CAACiC,KAAM;cAAC,GAAG,EAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QAC/B,eACN;YAAK,SAAS,EAAC,YAAY;YAAA,wBAEzB;cAAA,WAAKjC,IAAI,CAACkC,UAAU,CAAC,CAAC,CAAC,CAACC,KAAK;YAAA;cAAA;cAAA;cAAA;YAAA,QAAU,eACvC;cAAA,6BACE;gBAAA,UAASnC,IAAI,CAACkC,UAAU,CAAC,CAAC,CAAC,CAACC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAU,yBAC3C;gBAAA,UAASnC,IAAI,CAACkC,UAAU,CAAC,CAAC,CAAC,CAACC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAU,wBAC3C;gBAAA,UAASnC,IAAI,CAACkC,UAAU,CAAC,CAAC,CAAC,CAACC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAU;YAAA;cAAA;cAAA;cAAA;YAAA,QACzC,eACJ;cAAA,UAAInC,IAAI,CAACc;YAAO;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QACjB;QAAA,GAbmBkB,KAAK;UAAA;UAAA;UAAA;QAAA,QAejC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QAEF,EAEL9B,MAAM;IAAA;IAAM;IACX,QAAC,IAAI;MAAC,IAAI,EAAEF,IAAK;MAAC,QAAQ,EAAER,QAAS;MAAC,OAAO,EAAEI,OAAQ;MAAC,MAAM,EAAEF,MAAO;MAAC,SAAS,EAAEoC;IAAU;MAAA;MAAA;MAAA;IAAA,QAC9F;EAAA;IAAA;IAAA;IAAA;EAAA,QAEG;AAEV;AAAC,GAtGQvC,GAAG;AAAA,KAAHA,GAAG;AAwGZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}